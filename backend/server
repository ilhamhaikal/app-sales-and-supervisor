const express = require('express');
const cors = require('cors');
const mysql = require('mysql2');
require('dotenv').config();

const app = express();
app.use(cors());
app.use(express.json());

// Database connection
const db = mysql.createConnection({
  host: '10.0.20.3',
  user: 'sharon',
  password: 'sharon1988',
  database: 'db_erp'
});

// Routes
app.post('/api/login', async (req, res) => {
  const { email, password } = req.body;
  const query = 'SELECT * FROM m_user WHERE nip = ?';
  
  db.query(query, [email], (err, results) => {
    if (err) {
      res.status(500).json({ error: err.message });
      return;
    }
    // Add proper password verification here
    res.json({ success: true, user: results[0] });
  });
});

app.get('/api/users', (req, res) => {
  db.query('SELECT * FROM m_user', (err, results) => {
    if (err) {
      res.status(500).json({ error: err.message });
      return;
    }
    res.json(results);
  });
});

app.get('/api/dashboard', (req, res) => {
  const dashboardData = {
    userCount: 0,
    projectCount: 0,
    taskCount: 0,
    recentActivities: []
  };

  db.query('SELECT COUNT(*) as count FROM m_user', (err, results) => {
    if (err) {
      res.status(500).json({ error: err.message });
      return;
    }
    dashboardData.userCount = results[0].count;

    db.query('SELECT COUNT(*) as count FROM projects', (err, results) => {
      if (err) {
        res.status(500).json({ error: err.message });
        return;
      }
      dashboardData.projectCount = results[0].count;

      db.query('SELECT COUNT(*) as count FROM tasks', (err, results) => {
        if (err) {
          res.status(500).json({ error: err.message });
          return;
        }
        dashboardData.taskCount = results[0].count;

        db.query('SELECT * FROM activities ORDER BY created_at DESC LIMIT 10', (err, results) => {
          if (err) {
            res.status(500).json({ error: err.message });
            return;
          }
          dashboardData.recentActivities = results;
          res.json(dashboardData);
        });
      });
    });
  });
});

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});